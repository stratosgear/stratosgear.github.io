<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Stratos Gerakakis</title>
    <link>http://stratos.gerakakis.net/post/index.xml</link>
    <description>Recent content in Posts on Stratos Gerakakis</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 08 Mar 2017 21:45:58 +0100</lastBuildDate>
    <atom:link href="http://stratos.gerakakis.net/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Verifying my email signatures</title>
      <link>http://stratos.gerakakis.net/2017/03/verifying_email_signatures/</link>
      <pubDate>Wed, 08 Mar 2017 21:45:58 +0100</pubDate>
      
      <guid>http://stratos.gerakakis.net/2017/03/verifying_email_signatures/</guid>
      <description>

&lt;p&gt;After a funky incident many years ago, when a collaborator in a European project
(at a point where we were having an argument) decided to circulate one of my
emails, after editing it to his liking, all my bussiness emails are now
electronically signed.&lt;/p&gt;

&lt;p&gt;My emails end up being a little more &amp;ldquo;dirtier&amp;rdquo;, with all the PGP headers and
footers, but this comes at a very small inconvenience (at least to me)
considering that all my email correspondance is now tamperproof.&lt;/p&gt;

&lt;p&gt;I do get the occasional question though (apart from the complains that my emails
look funny) on how to actually check that a given email is valid and the
contents have not be altered.&lt;/p&gt;

&lt;p&gt;Here are two ways on how to verify, that an email was indeed sent by me and that
the contents have not been altered.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;:  What follows is going to mess with your head. PGP encryption and
signing is not meant to be used by everyday people.  I&amp;rsquo;ll try my best to give
a gentle overview, but still, it will be messy!&lt;/p&gt;

&lt;h3 id=&#34;format-of-signed-emails&#34;&gt;Format of signed emails&lt;/h3&gt;

&lt;p&gt;The format of the emails always have the following pattern:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256

Hi,

This is my email.

- --
Stratos Gerakakis
Senior Software Engineer

Planetek Hellas
44 Kifisias Avenue,  Athens Space Cluster
Building C, 15125 Marousi, Athens, Greece
Tel +34 918 131 442 - Mob +34 684 124 497
gerakakis@planetek.gr  –  www.planetek.gr

== https://keybase.io/stratosgerakakis ==

-----BEGIN PGP SIGNATURE-----

iQEzBAEBCAAdFiEETENGmDUJ68gM1ayY/6ikKBcYr8cFAljAcJgACgkQ/6ikKBcY
r8eQ+Af7B47OgqQJi171uMT/tndZHO8KzeGrQLUF6f8GwyrZ3Zcn2qIirOOsE5lD
QtbTxIkwW4iAAFygwUoG4nOXLlDI2emJAVxksdxsTsSo+vTi99DcbDVN9Tm1SiW1
//CEL8ciHrl9SJJSCWp2hLcQn21rUKsiCzAMVF1SHMHeWUc2roYSmmBzJyver0ph
YBhr0SdBzfcc+HBv0EBRURUypCtEf6Kci/D3/Zublg0m9qbg4p684IUnOvC7bjmQ
qpy6D1o7OkoKeKiGFMZSqsW3DvVvyXG37FzJZK7LBsmQBMR64IOLjv/n+dNTIZ20
F/IOd5lKZlytdI2bxIHq2Zt4leXtmQ==
=n7Pn
-----END PGP SIGNATURE-----
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;They always start with a &lt;code&gt;-----BEGIN PGP SIGNED MESSAGE-----&lt;/code&gt; string and they
end with a &lt;code&gt;-----END PGP SIGNATURE-----&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Save a file with these exact contents, including the PGP header and footer
strings, into a file, let&amp;rsquo;s say &lt;code&gt;/tmp/message.gpg&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The following instructions assume that you use a real operating system and that
you have access to a capable command line shell.&lt;/p&gt;

&lt;h3 id=&#34;verifying-with-gnupg&#34;&gt;Verifying with GnuPG&lt;/h3&gt;

&lt;p&gt;You will need to have the &lt;code&gt;GnuPG&lt;/code&gt; package installed.&lt;/p&gt;

&lt;p&gt;You will more likely need to have my public key to verify my signature and
the easiest way to get it would be with:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;curl https://keybase.io/stratosgerakakis/pgp_keys.asc | gpg --import
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The basic command to verify the email signature is:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gpg --verify /tmp/message.gpg
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You should be getting an output like:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ gpg --verify /tmp/message.gpg
gpg: Signature made Wed Mar  8 20:59:04 2017 UTC using RSA key ID 1718AFC7
gpg: Good signature from &amp;quot;Stratos Gerakakis &amp;lt;gerakakis@planetek.gr&amp;gt;&amp;quot;
gpg:                 aka &amp;quot;[jpeg image of size 22170]&amp;quot;
gpg: WARNING: This key is not certified with a trusted signature!
gpg:          There is no indication that the signature belongs to the owner.
Primary key fingerprint: 4C43 4698 3509 EBC8 0CD5  AC98 FFA8 A428 1718 AFC7
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The WARNING that gpg is displaying, is because of the inherent lack of trust
of my public key that you just imported.  Is it really &lt;strong&gt;my&lt;/strong&gt; public key that
you downloaded before?  Unless you personally verify with me that this is
indeed my key, gpg will always warn you that this is not a trusted key.&lt;/p&gt;

&lt;p&gt;You &lt;em&gt;could&lt;/em&gt; sign my key, implying that you trust it, and make the warning go
away, but that will mean that you already have your own set of private and
public keys, and at this point I&amp;rsquo;m not going to turn this into a full gpg
tutorial.&lt;/p&gt;

&lt;p&gt;The important thing, so far, is the line above that reads &lt;strong&gt;&lt;code&gt;Good signature
from &amp;quot;Stratos Gerakakis &amp;lt;gerakakis@planetek.gr&amp;gt;&amp;quot;&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If the message was tampered (try editing the &lt;code&gt;/tmp/message.gpg&lt;/code&gt; file) then
the response you would get would be something like:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ gpg --verify /tmp/message.gpg
gpg: Signature made Wed Mar  8 20:59:04 2017 UTC using RSA key ID 1718AFC7
gpg: BAD signature from &amp;quot;Stratos Gerakakis &amp;lt;gerakakis@planetek.gr&amp;gt;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you had &lt;strong&gt;not&lt;/strong&gt; imported my public key, as we did in the first step, then
you would be getting something like:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ gpg --verify /tmp/message.gpg
gpg: Signature made Wed Mar  8 20:59:04 2017 UTC using RSA key ID 1718AFC7
gpg: Can&#39;t check signature: public key not found
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;verifying-with-keybase&#34;&gt;Verifying with keybase&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://keybase.io/&#34;&gt;Keybase&lt;/a&gt; is a nice utility/service that encapsulates
a lot of this raw encryption/signing black magic into an easier workflow. It
also allows you to verify your self and establish a level of trust that the
keys that you claim are yours are indeed yours and that you are who you claim
to be.  Yes, this thing with the web of trust is very paranoid&amp;hellip;&lt;/p&gt;

&lt;p&gt;You will need to have the keybase binaries installed from their website in
order to follow through.&lt;/p&gt;

&lt;p&gt;Once you do, then:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ keybase pgp pull stratosgerakakis
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;will pull my public key, and:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ keybase gpg verify -i /tmp/message.gpg
Signature verified. Signed by stratosgerakakis 2 hours ago (2017-03-08 20:59:04 +0000 UTC).
PGP Fingerprint: 4c4346983509ebc80cd5ac98ffa8a4281718afc7.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;will verify that the email message is intact.&lt;/p&gt;

&lt;p&gt;Keybase is also doing a lot of other interesting stuff and it&amp;rsquo;s worth checking
it out, if you&amp;rsquo;re into that short of thing.&lt;/p&gt;

&lt;h3 id=&#34;automatic-ways-to-validate-email-signatures&#34;&gt;Automatic ways to validate email signatures&lt;/h3&gt;

&lt;p&gt;Obviously you are &lt;strong&gt;not&lt;/strong&gt; meant to go through the whole procedure for all the
emails.  Your emailer program should be able to help verify the signatures of
the emails, through the help of certain extensions/helper utilities.&lt;/p&gt;

&lt;p&gt;Once again this is not a full tutorial on how to setup your email program
(I don&amp;rsquo;t even know what program you&amp;rsquo;re using) but here is a list of programs
that have capabilities to encrypt and verify emails:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.enigmail.net&#34;&gt;Enigmail&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.mailvelope.com/en/&#34;&gt;Mailvelope&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.openkeychain.org/&#34;&gt;OpenKeychain&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gpgtools.org/&#34;&gt;GPGTools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;plus others I have not personaly tried.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Yes, unfortunately nothing in this worklfow is straightforward and it&amp;rsquo;s a big
mess, requiring a lot research and field specific knowledge to understand it
all.  And by no means I do &lt;strong&gt;not&lt;/strong&gt; claim to be an expert on any of these!&lt;/p&gt;

&lt;p&gt;Good luck!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Moving to Arch</title>
      <link>http://stratos.gerakakis.net/2014/08/moving_to_arch/</link>
      <pubDate>Fri, 22 Aug 2014 14:26:03 +0200</pubDate>
      
      <guid>http://stratos.gerakakis.net/2014/08/moving_to_arch/</guid>
      <description>&lt;p&gt;Well the time to move-on has finally come.&lt;/p&gt;

&lt;p&gt;After being a faithfull Ubuntu user since Warty Warthog, Ubuntu 4.10 back in 2004, (wow, already a decade ago) it is time to move on.&lt;/p&gt;

&lt;p&gt;There are multiple online posts complaining about the direction Ubuntu has taken over the last years, but I&amp;rsquo;ll just quickly state my own reasons.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Tired of constantly upgrading the system every six months. Although considerable effort is being taken to provide smooth upgrades, usually the procedure to upgrade a system takes the better part of a day.  That is, if everything goes well.  After almost 20 upgrades I had some gone awry on me, which really adds to the burden of updating the system.  And that&amp;rsquo;s only for one system.  Multiply that be 5-6 times, for all my servers, desktops, laptops and the amount of work really adds up.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Ever since the move to Unity (which I don&amp;rsquo;t like at all) I have been using Gnome3.  With Ubuntu I am forced to stay a couple of version behind, since the repositories do not include the latest version.  Some thing with other packages that do not have the latest versions updated in the repos.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;In the last two or three Ubuntu releases I get a lot of &lt;em&gt;&amp;ldquo;Sorry, Ubuntu has experienced an internal error&amp;rdquo;&lt;/em&gt; popups that are really annoying.  Same hardware, same settings but a lot of these errors.  And very vague descriptions of what went wrong.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So I decide it is time to move to another distro.  Reading many nice things online about &lt;a href=&#34;https://www.archlinux.org/&#34;&gt;Arch&lt;/a&gt; and after trying it in a Virtualbox machine I decided to take the plunge.  I took a shortcut though, and installed &lt;a href=&#34;http://antergos.com/&#34;&gt;Antergos&lt;/a&gt; which is a very nicely packaged version of Arch with a gui installer that automatically installs a Desktop Environemnt for you.  All done in &lt;a href=&#34;https://wiki.archlinux.org/index.php/The_Arch_Way&#34;&gt;the Arch way&lt;/a&gt; so the end result is well documented.&lt;/p&gt;

&lt;p&gt;More posts as the time passes by&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Mysql Bindings in Django</title>
      <link>http://stratos.gerakakis.net/2011/12/mysql_bindings_in_django/</link>
      <pubDate>Sun, 25 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>http://stratos.gerakakis.net/2011/12/mysql_bindings_in_django/</guid>
      <description>&lt;p&gt;In order to correctly install mysql bindings in a Django virtualenv you need:&lt;/p&gt;

&lt;p&gt;First install some Ubuntu dependencies::&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo aptitude install build-essential python-mysqldb libmysqlclient-dev
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then create the virtual env and install the python packages::&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ virtualenv --no-site-packages --distribute myVirtualEnv
$ pip install -E myVirtualEnv Django
$ pip install -E myVirtualEnv mysql-python
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I was missing the &lt;strong&gt;libmysqlclient-dev&lt;/strong&gt; package and I was getting a &lt;strong&gt;EnvironmentError: mysql_config not found&lt;/strong&gt; when running the &lt;strong&gt;pip install mysql-python&lt;/strong&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Translating a PDF</title>
      <link>http://stratos.gerakakis.net/2011/12/translating_a_pdf/</link>
      <pubDate>Thu, 15 Dec 2011 00:00:00 +0000</pubDate>
      
      <guid>http://stratos.gerakakis.net/2011/12/translating_a_pdf/</guid>
      <description>&lt;p&gt;Hey, if you pass the link of the online PDF document to the Google Translate service then Google will extract the text from the PDF and translate it in the language that you selected.  It doesn&amp;rsquo;t keep the &lt;strong&gt;exact same&lt;/strong&gt; page formatting but the PDF is now &lt;strong&gt;very&lt;/strong&gt; readable.  Much more readable than it was before&amp;hellip; :-)&lt;/p&gt;

&lt;p&gt;I didn&amp;rsquo;t know that!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>First overhead ISS pass</title>
      <link>http://stratos.gerakakis.net/2011/09/first_overhead_iss_pass/</link>
      <pubDate>Sat, 03 Sep 2011 00:00:00 +0000</pubDate>
      
      <guid>http://stratos.gerakakis.net/2011/09/first_overhead_iss_pass/</guid>
      <description>
&lt;figure &gt;
    
        &lt;img src=&#34;http://stratos.gerakakis.net/images/iss.jpg&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;International Space Station&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;


&lt;p&gt;Today I saw my first overhead pass of the ISS.&lt;/p&gt;

&lt;p&gt;For some time I was registered to &lt;a href=&#34;http://www.twisst.nl&#34;&gt;Twisst&lt;/a&gt; and I was receiving their notifications on Twitter but I never actually bothered to really look up and see the station fly overhead.  Well, in my defense, living in Athens, with all this light pollution you can barely see the sky and the stars, so I was waiting for the right opportunity before I actually tried.&lt;/p&gt;

&lt;p&gt;So, today at 20:52 (right as Twisst predicted) I saw the ISS. The brightness was supposed to be at a magnitude of -1.6 (I have no idea how bright that is) and I was wondering what was I was supposed to be looking at.  Suddenly, approximately where I was looking at, a very bright star appeared out of nowhere.  And I could see it with a naked eye.&lt;/p&gt;

&lt;p&gt;It was brighter than the other current stars I could see at the moment and it moved at a pretty high speed accross the sky.  It looked like an airplane was flying overhead, but at a quite fast pace.  The whole pass took approximately 5 minutes and the station traversed an arc almost two thirds of the sky. Then, slowly, in 5-6 seconds, while it was still moving, faded out to nothing.&lt;/p&gt;

&lt;p&gt;I must have look like an idiot, standing there in the middle of the park (it was Azul&amp;rsquo;s nightly walk) gazing at the sky for five minutes.  But, I think it was worth it&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>stratos?ear.com word play</title>
      <link>http://stratos.gerakakis.net/2011/06/stratos_ear_com/</link>
      <pubDate>Sat, 04 Jun 2011 00:00:00 +0000</pubDate>
      
      <guid>http://stratos.gerakakis.net/2011/06/stratos_ear_com/</guid>
      <description>&lt;p&gt;It&amp;rsquo;s funny how many of the following domain names are actually working (and how many of the letter combinations actually make sense):&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Domain&lt;/th&gt;
&lt;th&gt;Valid Word&lt;/th&gt;
&lt;th&gt;Domain Name&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;www.stratosaear.com&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;www.stratosbear.com&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;www.stratoscear.com&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;www.stratosdear.com&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;www.stratoseear.com&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Exists&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;www.stratosfear.com&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Obviously&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;www.stratosgear.com&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Exists&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;www.stratoshear.com&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;www.stratosiear.com&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;www.stratosjear.com&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;www.stratoskear.com&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Exists&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;www.stratoslear.com&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;www.stratosmear.com&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;www.stratosnear.com&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;www.stratosoear.com&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;www.stratospear.com&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;www.stratosqear.com&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;www.stratosrear.com&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;www.stratossear.com&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;www.stratostear.com&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;www.stratosuear.com&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;www.stratosvear.com&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Exists&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;www.stratoswear.com&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;www.stratosxear.com&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;www.stratosyear.com&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;td&gt;www.stratoszear.com&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;strong&gt;(Edited):&lt;/strong&gt; This post was written when the blog was hosted on www.stratosgear.com.  I have long since moved it to the current location. &lt;em&gt;&amp;ndash;Aug 14 2014&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Cosmote more 4 us</title>
      <link>http://stratos.gerakakis.net/2011/05/cosmote_more_4_us/</link>
      <pubDate>Sat, 28 May 2011 00:00:00 +0000</pubDate>
      
      <guid>http://stratos.gerakakis.net/2011/05/cosmote_more_4_us/</guid>
      <description>
&lt;figure &gt;
    
        &lt;img src=&#34;http://stratos.gerakakis.net/images/cosmote_more4us.jpg&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;Cosmote more 4 us&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;


&lt;p&gt;Ξαφνικά άρχισαν να μου έρχονται κάποια SMS στο καρτοκινητό μου ότι:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;ΜΟΛΙΣ ΣΥΝΔΕΘΗΚΕΣ ΣΤΟ INTERNET ΜΕ ΧΡΕΩΣΗ 1Ε ΓΙΑ 24 ΩΡΕΣ. ΜΠΟΡΕΙΣ ΝΑ ΣΕΡΦΑΡΕΙΣ ΑΠΕΡΙΟΡΙΣΤΑ ΑΠΟ ΤΟ ΚΙΝΗΤΟ ΣΟY ΜΕΧΡΙ ΤΙΣ 22/05/11 11:45 ΧΩΡΙΣ ΕΠΙΠΛΕΟΝ ΧΡΕΩΣΗ.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Στην αρχή νόμιζα ότι έκανα εγώ κάποιο λάθος, αλλά σήμερα διασταύρωσα με την αδερφή μου ότι γίνεται και σε εκείνην το ίδιο.  Σε αυτήν είχαν ήδη χρεώσει περίπου 20 ευρώ και όταν πήρε τηλέφωνο την εξυπηρέτηση πελατών της είπαν ότι είναι μια καινούρια υπηρεσία της Cosmote και αν δεν την θέλει μπορεί να την απενεργοποιήσει.&lt;/p&gt;

&lt;p&gt;Συγνώμη!!! Με ρώτησε κανείς εμένα αν θέλω αυτήν την &amp;ldquo;καινούρια υπηρεσία&amp;rdquo; πριν αρχίσουν να μου την χρεώνουν; Έστειλα εγώ κανένα SMS ενεργοποίησης πουθενά;&lt;/p&gt;

&lt;p&gt;Ποιός ξέρει πόσα παράνομα τέτοια ευρώ έχει μαζέψει η Cosmote με αυτήν την απάτη.&lt;/p&gt;

&lt;p&gt;Έλεος&amp;hellip;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[Update 1η Ιουνίου 2011]:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Μετά από λίγο googling βρήκα τα εξής:&lt;/p&gt;

&lt;p&gt;Αυτή η υπηρεσία λέγεται &lt;strong&gt;Cosmote Internet Day Pass&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Σύμφωνα με τα λεγόμενα τους:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Η υπηρεσία COSMOTE Internet Day Pass είναι προενεργοποιημένη σε όλους τους συνδρομητές Συμβολαίου, ΚαρτοΣυμβολαίου και Καρτοκινητής που δεν έχουν ενεργοποιημένο κάποιο πρόγραμμα ή πρόσθετη υπηρεσία που να παρέχει πρόσβαση στο Internet.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Και πάλι, επιμένω, κανείς δεν με ρώτησε αν θέλω την αυτόματη ενεργοποίηση.&lt;/p&gt;

&lt;p&gt;Τέλος, για να απαλαγείς από τις χρεώσεις (κάτι που θα έπρεπε να αναφέρεται και στα SMS που στέλνουν) απλά στείλε δωρεάν SMS με τις λέξεις END DAY στο 1333.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[Update 30 Σεπτεμβρίου 2011]:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Το μύνημα ξαναεπέστρεψε (μαζί με την χρέωση).  Τώρα, και καλά, το έχουν &amp;ldquo;φτιάξει λίγο&amp;rdquo; γιατί μερικά δευτερόλεπτα μετά το πρώτο μύνημα (με το ΜΟΛΙΣ ΣΥΝΔΕΘΗΚΕΣ ΣΤΟ INTERNET κτλ κτλ) σου στέλνουν κι&amp;rsquo; άλλο μύνημα που λέει:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;ΑΝ ΕΧΕΙΣ SMARTPHONE ΣΥΣΚΕΥΗ Η ΠΡΟΣΒΑΣΗ ΣΤΟ INTERNET ΙΣΩΣ ΟΦΕΙΛΕΤΑΙ ΣΕ ΕΦΑΡΜΟΓΕΣ (ΚΑΙΡΟΣ-ΝΕΑ-Ε-MAIL) ΠΟΥ ΣΥΝΔΕΟΝΤΑΙ ΑΥΤΟΜΑΤΑ. ΓΙΑ ΠΛΗΡΟΦΟΡΙΕΣ ΚΑΛΕΣΕ ΤΟ 13838&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Βασικά, δηλαδή, φταίει η συσκευή σου που είναι smartphone και έχει την απαίτηση να συνδεθεί στο internet.  Δεν φταίμε εμείς, η Cosmote, που ξεδιάντροπα αποφασίσαμε για σένα ότι θέλεις να χρεώνεσαι κάθε μέρα ένα ευρώ χωρίς να έχεις ερωτηθεί πρώτα! Όχι, μάλλον φταίνε οι εφαρμογές του τηλεφώνου σου.&lt;/p&gt;

&lt;p&gt;Επίσης στο μύνημα που σου στέλνουμε ΔΕΝ σου λέμε πως να το απενεργοποιήσεις, αλλά πάρε μας τηλέφωνο να σε χρεώσουμε και γι&amp;rsquo;αυτό.  Άσε που μερικοί μπορεί και να μην το κάνουνε, οπότε θα συνεχίσουμε να τους χρεώνουμε τα ευρώ.&lt;/p&gt;

&lt;p&gt;Πήρα πάλι τηλέφωνο για να δώ πως τελικά απενεργοποιήται αυτό το πράγμα.  Για να σας γλυτώσω και τα άλλα 0.135€ που σε χρεώνουν στο 13838 (οι ρεζίληδες) οι οδηγίες είναι οι εξής:&lt;/p&gt;

&lt;p&gt;(όπως είχα αναφέρει και πριν) Στέλνεις END DAY στο 1333.&lt;/p&gt;

&lt;p&gt;Απαντάνε με:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;ΤΟ ΑΙΤΗΜΑ ΣΑΣ ΕΙΝΑΙ ΥΠΟ ΕΠΕΞΕΡΓΑΣΙΑ&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;και μετά από λίγο:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;ΤΟ ΑΙΤΗΜΑ ΣΑΣ ΓΙΑ ΑΠΕΝΕΡΓΟΠΟΙΗΣΗ ΤΗΣ ΥΠΗΡΕΣΙΑΣ COSMOTE INTERNET DAY PASS ΟΛΟΚΛΗΡΩΘΗΚΕ.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Recording Streaming Audio</title>
      <link>http://stratos.gerakakis.net/2011/04/recording_streaming_audio/</link>
      <pubDate>Mon, 25 Apr 2011 00:00:00 +0000</pubDate>
      
      <guid>http://stratos.gerakakis.net/2011/04/recording_streaming_audio/</guid>
      <description>

&lt;p&gt;My choice of Ubuntu tools for recording, splitting and tagging streaming audio.&lt;/p&gt;

&lt;h2 id=&#34;recording&#34;&gt;Recording&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://streamripper.sourceforge.net&#34;&gt;streamripper&lt;/a&gt;: Command line tool. Excellent choice since it makes it so easy to schedule recordings with it::&lt;/p&gt;

&lt;p&gt;$ streamripper URL -d /home/stratos/outRec -l 7800 -d /dir/to/save -t &amp;ndash;xs-none&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;-l 7800: The duration of the recording (in seconds)&lt;/li&gt;
&lt;li&gt;-d /dir/to/save: Directory where to save the stream.&lt;/li&gt;
&lt;li&gt;-t: Do not overwrite files in recording folder.&lt;/li&gt;
&lt;li&gt;&amp;ndash;xs-none: Do not try to find silent parts in the recording&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Of course adding to cron is quite easy::&lt;/p&gt;

&lt;p&gt;$ crontab -e
  0 6 * * 1 streamripper URL -options for recording every Monday morning at 6.&lt;/p&gt;

&lt;h2 id=&#34;splitting&#34;&gt;Splitting&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://audacious-media-player.org&#34;&gt;audacious&lt;/a&gt;: Audio player that has a nice Left-Right cursor key playback to easily find the places in the stream recording that you want to split/cut. Mark the Start and End Time from the recording that you made.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://mp3splt.sourceforge.net/mp3splt_page/home.php&#34;&gt;mp3spl&lt;/a&gt;: Using the Start and End Times from above, use them to split the recording. Don&amp;rsquo;t bother with the &lt;code&gt;mp3splt-gtk&lt;/code&gt; gui app::&lt;/p&gt;

&lt;p&gt;$ mp3splt recording.mp3 65.36 124.33 -a -o finalRecording&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;65.36: The start time from the original recording that the split will start&lt;/li&gt;
&lt;li&gt;124.33: The end time from the original recording that the split will end.&lt;/li&gt;
&lt;li&gt;-a: This option will slightly adjust the start and end time to fall on a silent period.&lt;/li&gt;
&lt;li&gt;-o finalRecording: The final splitted file.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;tagging&#34;&gt;Tagging&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://easytag.sourceforge.net&#34;&gt;easyTag&lt;/a&gt;: Use it to put mp3 tags in the final recording. Actually, any tagger would do. This is a, well, easy one!&lt;/p&gt;

&lt;p&gt;Happy recordings!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Convert an A4 sized .pdf file to A5 size</title>
      <link>http://stratos.gerakakis.net/2011/01/convert_an_a4_page_to_a5/</link>
      <pubDate>Wed, 05 Jan 2011 00:00:00 +0000</pubDate>
      
      <guid>http://stratos.gerakakis.net/2011/01/convert_an_a4_page_to_a5/</guid>
      <description>&lt;p&gt;I was working on a LyX document based on the Tufte layout and unfortunately the page layout was available at A4 page sizes only (ok, US letter, too, but that doesn&amp;rsquo;t count :)&lt;/p&gt;

&lt;p&gt;I could try and learn Latex and create my own page size but the task looked monumental. I am sure the solution might be easy enough, but I just couldn&amp;rsquo;t do it myself. Googling for A5 sized tufte layouts didn&amp;rsquo;t help either.&lt;/p&gt;

&lt;p&gt;So to the command line it is.&lt;/p&gt;

&lt;p&gt;From LyX export you final document to postscript format, let&amp;rsquo;s say myBook.ps.&lt;/p&gt;

&lt;p&gt;Then:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  psresize -Pa4 -pa5 myBook.ps myBook.A5.ps
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will convert the original .ps to another sized at A5. Unfortunately it will need further tweaking.&lt;/p&gt;

&lt;p&gt;Open the myBook.A5.ps postscript file and delete the &lt;code&gt;% %DocumentMedia&lt;/code&gt; line (if one exists).&lt;/p&gt;

&lt;p&gt;Also change the existing &lt;code&gt;% %BoundingBox:&lt;/code&gt; line to:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;% % BoundingBox: 0 0 421 595
% % DocumentPaperSizes: a5
% % BeginPaperSize: a5
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; On a couple of documents I could not locate the &lt;code&gt;% %BoundingBox:&lt;/code&gt; line and the structure of the .ps file was a little weird. As a workaround try to edit the:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;% % BeginPaperSize: a5
/setpagedevice where
{ pop &amp;lt;&amp;lt; /PageSize [420 595] &amp;gt;&amp;gt; setpagedevice }
{ /a5 where { pop a5 } if }
ifelse
% % EndPaperSize
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;section. In it&amp;rsquo;s original format it will contain A4 references and the dimensions would be [595 842].&lt;/p&gt;

&lt;p&gt;Finally create your PDF file:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gs -dSAFER -dNOPAUSE -dBATCH -sDEVICE=pdfwrite \
-sPAPERSIZE=a5 -dPDFSETTINGS=/printer \
-dCompatibilityLevel=1.4 -dMaxSubsetPct=100 \
-dSubsetFonts=true -dEmbedAllFonts=true \
-sOutputFile=myBook.pdf myBook.A5.ps
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Open myBook.pdf and marvel at your handiwork&amp;hellip; :)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Installing Virtualbox on Ubuntu Server 10.04</title>
      <link>http://stratos.gerakakis.net/2010/10/installing_virtualbox_on_ubuntu_server_10_04/</link>
      <pubDate>Fri, 22 Oct 2010 00:00:00 +0000</pubDate>
      
      <guid>http://stratos.gerakakis.net/2010/10/installing_virtualbox_on_ubuntu_server_10_04/</guid>
      <description>

&lt;p&gt;Wanna install Virtualbox on a headless Ubuntu server?&lt;/p&gt;

&lt;p&gt;First do a:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo aptitude install libcurl3 libgl1-mesa-glx libqt4-network libqt4-opengl libxcursor1 libxinerama1 libxmu6 libsdl1.2debian
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then download the appropriate .deb for your architecture from &lt;a href=&#34;http://www.virtualbox.org/wiki/Linux_Downloads&#34;&gt;http://www.virtualbox.org/wiki/Linux_Downloads&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Finally, install with:&lt;/p&gt;

&lt;p&gt;sudo dpkg -i virtualbox-3.2_3.2.10-66523~Ubuntu~lucid_amd64.deb&lt;/p&gt;

&lt;p&gt;(Ok, I installed virtualbox 3.2 on a 64 bit server, yours might vary)&lt;/p&gt;

&lt;h3 id=&#34;extra-credit&#34;&gt;Extra credit&lt;/h3&gt;

&lt;p&gt;If you want to make your life &lt;strong&gt;REAAALY&lt;/strong&gt; easy you should also install &lt;a href=&#34;http://code.google.com/p/phpvirtualbox&#34;&gt;phpvirtualbox&lt;/a&gt; on the host Ubuntu server and get a shiny web based GUI administration screen that looks almost exactly like the native GUI Virtualbox application.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>RAID LVM2 setup</title>
      <link>http://stratos.gerakakis.net/2010/10/raid_lvm2_setup/</link>
      <pubDate>Wed, 20 Oct 2010 00:00:00 +0000</pubDate>
      
      <guid>http://stratos.gerakakis.net/2010/10/raid_lvm2_setup/</guid>
      <description>

&lt;p&gt;I&amp;rsquo;ve been using a software created RAID in Ubuntu for a couple of years now, and I am very happy with it. The system has gone through many iterations of system updates (and even some complete OS reinstalls) and it keeps working fine.&lt;/p&gt;

&lt;p&gt;Recently, I was not happy with the way I had partitioned the array and I wanted to re-arrange it, so I thought it would be a nice idea to document the process I went through. At the same I took the opportunity to also document the initial array creation (in case I&amp;rsquo;ll have to redo it again)&lt;/p&gt;

&lt;h2 id=&#34;raid-setup&#34;&gt;RAID Setup&lt;/h2&gt;

&lt;h3 id=&#34;creating-the-raid-sandbox&#34;&gt;Creating the RAID sandbox&lt;/h3&gt;

&lt;p class=&#34;admonition warning&#34; markdown=&#34;1&#34;&gt;
&lt;b&gt;Caution:&lt;/b&gt; Do not play recklessly with your disk partitions. You can very easily mistype something, or run a command with the wrong parameters and lose your data. Instead of blindingly follow what I propose here, create a safe sandbox environment to familiarize yourself with the RAID setup.  Then when you are comfortable setting everything up, do the same thing with your real disks.
&lt;/p&gt;

&lt;p&gt;The sandbox will consist of some loopback files that will simulate disk partitions. We will use these &amp;ldquo;fake&amp;rdquo; partitions to create our array. That way there will be no harm on your actual disks.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s imitate the creation of the RAID5 partition. First we will create three loopback files of 100MB each:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;stratos@yoda:/tmp$ cd ~

stratos@yoda:~$ cd sandbox/

stratos@yoda:~/sandbox$ dd if=/dev/zero of=raid1 bs=10240 count=10240
10240+0 records in
10240+0 records out
104857600 bytes (105 MB) copied, 0.315455 s, 332 MB/s

stratos@yoda:~/sandbox$ cp raid1 raid2

stratos@yoda:~/sandbox$ cp raid1 raid3

stratos@yoda:~/sandbox$ ls -al
total 307216
drwxr-xr-x  2 stratos stratos      4096 2010-10-01 23:56 .
drwxr-xr-x 11 stratos stratos      4096 2010-10-01 23:55 ..
-rw-r--r--  1 stratos stratos 104857600 2010-10-01 23:56 raid1
-rw-r--r--  1 stratos stratos 104857600 2010-10-01 23:56 raid2
-rw-r--r--  1 stratos stratos 104857600 2010-10-01 23:56 raid3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;With the loopback files created we can mount them as partitions:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;stratos@yoda:~/sandbox$ sudo losetup /dev/loop1 raid1
stratos@yoda:~/sandbox$ sudo losetup /dev/loop2 raid2
stratos@yoda:~/sandbox$ sudo losetup /dev/loop3 raid3
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;setup-of-raid-arrays&#34;&gt;Setup of RAID arrays&lt;/h3&gt;

&lt;p&gt;Now we have created three partitions /dev/loop1, /dev/loop2 and /dev/loop3 that will imitate some actual /dev/sdXX, /dev/sdXX and /dev/sdXX partitions.&lt;/p&gt;

&lt;p&gt;Now, let&amp;rsquo;s combined them to create our RAID5 array:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;stratos@yoda:~/sandbox$ sudo mdadm --create --verbose /dev/md3 -l5 -n3 /dev/loop1 /dev/loop2 /dev/loop3
mdadm: layout defaults to left-symmetric
mdadm: chunk size defaults to 64K
mdadm: size set to 102336K
mdadm: array /dev/md3 started.
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;lvm2-setup&#34;&gt;LVM2 Setup&lt;/h2&gt;

&lt;p&gt;At this point we could format the /dev/md3 partition with some filesystem and start using it. But that&amp;rsquo;s the old way of doing it. What we want to do is run LVM2 on top of the RAID5 partition so we can better utilize the space provided by the /dev/md3 partition, allowing us to dynamically create, resize and remove volumes in the space provided.&lt;/p&gt;

&lt;h3 id=&#34;create-the-lvm2-partitions&#34;&gt;Create the LVM2 partitions&lt;/h3&gt;

&lt;p&gt;In order to use LVM2 we first have to create a LVM2 Physical Volume:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;stratos@yoda:~/sandbox$ sudo pvcreate /dev/md3
  Physical volume &amp;quot;/dev/md3&amp;quot; successfully created

stratos@yoda:~/sandbox$ sudo pvdisplay
  &amp;quot;/dev/md3&amp;quot; is a new physical volume of &amp;quot;199.88 MB&amp;quot;
  --- NEW Physical volume ---
  PV Name               /dev/md3
  VG Name
  PV Size               199.88 MB
  Allocatable           NO
  PE Size (KByte)       0
  Total PE              0
  Free PE               0
  Allocated PE          0
  PV UUID               a00wd1-tPYt-zeuf-dybg-WbOX-3KDb-JYWlU6
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So, we see here that the three 100MB loopback files have been combined to a 200MB RAID5 LVM2 Physical Volume (3 disks - 1 parity = 2 disks * 100 MB = 200MB usable space)&lt;/p&gt;

&lt;p&gt;Next we will create a LVM2 Volume Group:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;stratos@yoda:~/sandbox$ sudo vgcreate lvm-group /dev/md3
  Volume group &amp;quot;lvm-group&amp;quot; successfully created

stratos@yoda:~/sandbox$ sudo vgdisplay
  --- Volume group ---
  VG Name               lvm-group
  System ID
  Format                lvm2
  Metadata Areas        1
  Metadata Sequence No  1
  VG Access             read/write
  VG Status             resizable
  MAX LV                0
  Cur LV                0
  Open LV               0
  Max PV                0
  Cur PV                1
  Act PV                1
  VG Size               196.00 MB
  PE Size               4.00 MB
  Total PE              49
  Alloc PE / Size       0 / 0
  Free  PE / Size       49 / 196.00 MB
  VG UUID               D6c2DE-YS5R-MM8M-rle5-J117-uF11-KORUYB
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;From the vgdisplay command we should note the Free PE size value. PE stands for Physical Extends and it the minimum amount of storage unit that we can use to create our final LVM2 volumes. Basically we have 49 PE to allocate as we wish for LVM2 volumes. Each PE is 196MB / 49 = 4MB of size.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s create a LVM2 Logical Volume with 20 PE (20 * 4MBs = 80MB):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;stratos@yoda:~/sandbox$ sudo lvcreate -l 20 lvm-group -n myVolume
  Logical volume &amp;quot;myVolume&amp;quot; created

stratos@yoda:~/sandbox$ sudo lvdisplay
  --- Logical volume ---
  LV Name                /dev/lvm-group/myVolume
  VG Name                lvm-group
  LV UUID                qtWGgg-NIgm-l3qz-YYLP-tCG2-FApD-oVd8il
  LV Write Access        read/write
  LV Status              available
  # open                 0
  LV Size                80.00 MB
  Current LE             20
  Segments               1
  Allocation             inherit
  Read ahead sectors     auto
  - currently set to     256
  Block device           252:5
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Finally, the LVM2 volume has been created. Let&amp;rsquo;s see what&amp;rsquo;s left from the lvm-group Volume Group:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;stratos@yoda:~/sandbox$ sudo vgdisplay
  --- Volume group ---
  VG Name               lvm-group
  System ID
  Format                lvm2
  Metadata Areas        1
  Metadata Sequence No  2
  VG Access             read/write
  VG Status             resizable
  MAX LV                0
  Cur LV                1
  Open LV               0
  Max PV                0
  Cur PV                1
  Act PV                1
  VG Size               196.00 MB
  PE Size               4.00 MB
  Total PE              49
  Alloc PE / Size       20 / 80.00 MB
  Free  PE / Size       29 / 116.00 MB
  VG UUID               D6c2DE-YS5R-MM8M-rle5-J117-uF11-KORUYB
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;OK. The allocated PE are 20 and we have another 29 unallocated.&lt;/p&gt;

&lt;h3 id=&#34;create-the-mountable-volume&#34;&gt;Create the mountable volume&lt;/h3&gt;

&lt;p&gt;The newly created LVM2 volume is unformatted:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;stratos@yoda:~/sandbox$ sudo mkfs.ext4 /dev/lvm-group/myVolume
mke2fs 1.41.9 (22-Aug-2009)
Filesystem label=
OS type: Linux
Block size=1024 (log=0)
Fragment size=1024 (log=0)
20480 inodes, 81920 blocks
4096 blocks (5.00%) reserved for the super user
First data block=1
Maximum filesystem blocks=67371008
10 block groups
8192 blocks per group, 8192 fragments per group
2048 inodes per group
Superblock backups stored on blocks:
        8193, 24577, 40961, 57345, 73729

Writing inode tables: done
Creating journal (4096 blocks): done
Writing superblocks and filesystem accounting information: done

This filesystem will be automatically checked every 21 mounts or
180 days, whichever comes first.  Use tune2fs -c or -i to override.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now let&amp;rsquo;s mount it:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;stratos@yoda:~/sandbox$ mkdir myVolume

stratos@yoda:~/sandbox$ sudo mount /dev/lvm-group/myVolume myVolume

stratos@yoda:~/sandbox$ ls -al
total 307217
drwxr-xr-x  3 stratos stratos      4096 2010-10-02 00:31 .
drwxr-xr-x 10 stratos stratos      4096 2010-10-02 00:06 ..
drwxr-xr-x  3 root    root         1024 2010-10-02 00:30 myVolume
-rw-r--r--  1 stratos stratos 104857600 2010-10-01 23:56 raid1
-rw-r--r--  1 stratos stratos 104857600 2010-10-01 23:56 raid2
-rw-r--r--  1 stratos stratos 104857600 2010-10-01 23:56 raid3

stratos@yoda:~/sandbox$ cd myVolume/

stratos@yoda:~/sandbox/myVolume$ ls -al
total 17
drwxr-xr-x 3 root    root     1024 2010-10-02 00:30 .
drwxr-xr-x 3 stratos stratos  4096 2010-10-02 00:31 ..
drwx------ 2 root    root    12288 2010-10-02 00:30 lost+found
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So, now we finally have a 80MB volume that is sitting atop a RAID5 partition.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s put some files in the this volume so we can test if the tests we will run later on will make us lose our data:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;stratos@yoda:~/sandbox/myVolume$ sudo sh -c &amp;quot;echo &#39;Hello LVM2 logical volume&#39; &amp;gt; test.txt&amp;quot;

stratos@yoda:~/sandbox/myVolume$ cat test.txt
Hello LVM2 logical volume
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As long as the &lt;strong&gt;test.txt&lt;/strong&gt; file is there through all our following tests, then our data is safe.&lt;/p&gt;

&lt;h2 id=&#34;lvm2-manipulation&#34;&gt;LVM2 Manipulation&lt;/h2&gt;

&lt;p&gt;Let&amp;rsquo;s play with the 49 available PE given to us from the lvm-group Volume Group.&lt;/p&gt;

&lt;h3 id=&#34;add-more-volumes&#34;&gt;Add more volumes&lt;/h3&gt;

&lt;p&gt;Create another LVM2 Logical volume:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;stratos@yoda:~/sandbox$ &amp;lt;b&amp;gt;sudo lvcreate -l 10 lvm-group -n myVolume2&amp;lt;/b&amp;gt;
  Logical volume &amp;quot;myVolume2&amp;quot; created

stratos@yoda:~/sandbox$ sudo mkfs.ext4 /dev/lvm-group/myVolume2
mke2fs 1.41.9 (22-Aug-2009)
Filesystem label=
OS type: Linux
Block size=1024 (log=0)
Fragment size=1024 (log=0)
10240 inodes, 40960 blocks
2048 blocks (5.00%) reserved for the super user
First data block=1
Maximum filesystem blocks=41943040
5 block groups
8192 blocks per group, 8192 fragments per group
2048 inodes per group
Superblock backups stored on blocks:
        8193, 24577

Writing inode tables: done
Creating journal (4096 blocks): done
Writing superblocks and filesystem accounting information: done

This filesystem will be automatically checked every 21 mounts or
180 days, whichever comes first.  Use tune2fs -c or -i to override.

stratos@yoda:~/sandbox$ mkdir myVolume2

stratos@yoda:~/sandbox$ sudo mount /dev/lvm-group/myVolume2 myVolume2

stratos@yoda:~/sandbox$ ls -al
total 307218
drwxr-xr-x  4 stratos stratos      4096 2010-10-02 11:39 .
drwxr-xr-x 10 stratos stratos      4096 2010-10-02 00:06 ..
drwxr-xr-x  3 root    root         1024 2010-10-02 00:42 myVolume
drwxr-xr-x  3 root    root         1024 2010-10-02 11:39 myVolume2
-rw-r--r--  1 stratos stratos 104857600 2010-10-01 23:56 raid1
-rw-r--r--  1 stratos stratos 104857600 2010-10-01 23:56 raid2
-rw-r--r--  1 stratos stratos 104857600 2010-10-01 23:56 raid3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now we have another volume with 10 PE (40MB).&lt;/p&gt;

&lt;h3 id=&#34;resize-volumes&#34;&gt;Resize volumes&lt;/h3&gt;

&lt;p&gt;We have myVolume with 20 PE and myVolume2 with 10 PE. We should have 19 PE still unallocated:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;stratos@yoda:~/sandbox$ sudo vgdisplay
  --- Volume group ---
  VG Name               lvm-group
  System ID
  Format                lvm2
  Metadata Areas        1
  Metadata Sequence No  3
  VG Access             read/write
  VG Status             resizable
  MAX LV                0
  Cur LV                2
  Open LV               2
  Max PV                0
  Cur PV                1
  Act PV                1
  VG Size               196.00 MB
  PE Size               4.00 MB
  Total PE              49
  Alloc PE / Size       30 / 120.00 MB
  Free  PE / Size       19 / 76.00 MB
  VG UUID               D6c2DE-YS5R-MM8M-rle5-J117-uF11-KORUYB
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Let&amp;rsquo;s increase the size of myVolume by 10 PE:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;stratos@yoda:~/sandbox$ sudo lvextend -l+10 /dev/lvm-group/myVolume
  Extending logical volume myVolume to 120.00 MB
  Logical volume myVolume successfully resized

stratos@yoda:~/sandbox$ sudo umount myVolume

stratos@yoda:~/sandbox$ sudo e2fsck -f /dev/lvm-group/myVolume
e2fsck 1.41.9 (22-Aug-2009)
Pass 1: Checking inodes, blocks, and sizes
Pass 2: Checking directory structure
Pass 3: Checking directory connectivity
Pass 4: Checking reference counts
Pass 5: Checking group summary information
/dev/lvm-group/myVolume: 12/20480 files (8.3% non-contiguous), 8240/81920 blocks

stratos@yoda:~/sandbox$ sudo resize2fs /dev/lvm-group/myVolume
resize2fs 1.41.9 (22-Aug-2009)
Resizing the filesystem on /dev/lvm-group/myVolume to 122880 (1k) blocks.
The filesystem on /dev/lvm-group/myVolume is now 122880 blocks long.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Let&amp;rsquo;s check if we still have our files:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;stratos@yoda:~/sandbox$ sudo mount /dev/lvm-group/myVolume myVolume

stratos@yoda:~/sandbox$ cd myVolume

\stratos@yoda:~/sandbox/myVolume$ ls -al
total 18
drwxr-xr-x 3 root    root     1024 2010-10-02 00:42 .
drwxr-xr-x 4 stratos stratos  4096 2010-10-02 11:39 ..
drwx------ 2 root    root    12288 2010-10-02 00:30 lost+found
-rw-r--r-- 1 root    root       26 2010-10-02 00:42 test.txt

stratos@yoda:~/sandbox/myVolume$ cat test.txt
Hello LVM2 logical volume
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So far so good.&lt;/p&gt;

&lt;h3 id=&#34;remove-volumes&#34;&gt;Remove volumes&lt;/h3&gt;

&lt;p&gt;We have another volume, myVolume2 that we created for fun for 10 PE (40 MB). Let&amp;rsquo;s remove it and reclaim the space:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;stratos@yoda:~/sandbox/myVolume$ cd ..

stratos@yoda:~/sandbox$ sudo umount myVolume2

stratos@yoda:~/sandbox$ sudo lvremove /dev/lvm-group/myVolume2
Do you really want to remove active logical volume &amp;quot;myVolume2&amp;quot;? [y/n]: y
  Logical volume &amp;quot;myVolume2&amp;quot; successfully removed

stratos@yoda:~/sandbox$ sudo vgdisplay
  --- Volume group ---
  VG Name               lvm-group
  System ID
  Format                lvm2
  Metadata Areas        1
  Metadata Sequence No  5
  VG Access             read/write
  VG Status             resizable
  MAX LV                0
  Cur LV                1
  Open LV               1
  Max PV                0
  Cur PV                1
  Act PV                1
  VG Size               196.00 MB
  PE Size               4.00 MB
  Total PE              49
  Alloc PE / Size       30 / 120.00 MB
  Free  PE / Size       19 / 76.00 MB
  VG UUID               D6c2DE-YS5R-MM8M-rle5-J117-uF11-KORUYB
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So, now we have 19 free PE. The allocated 30 are from myVolume (20 initial + 10 after the resize)&lt;/p&gt;

&lt;h2 id=&#34;raid-manipulation&#34;&gt;RAID Manipulation&lt;/h2&gt;

&lt;p&gt;Playing with LVM2 is nice because you can manipulate and assign the available space you have any way you want. The actual unseen hero is the RAID5 volume that we have created because it provides a guarantee that even if one disk fails we will not lose our data. Let&amp;rsquo;s play with the RAID disks now.&lt;/p&gt;

&lt;h3 id=&#34;fail-a-raid-disk-and-recover&#34;&gt;Fail a RAID disk and recover&lt;/h3&gt;

&lt;p&gt;Hopefully you will never have to face a failed disk, but it is quite important to know what to do if a disk fails. For now, in our comfortable sandbox we will imitate a failed disk and we will check if we&amp;rsquo;ll lose any data:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;stratos@yoda:~/sandbox$ sudo mdadm --fail /dev/md3 /dev/loop3
mdadm: set /dev/loop3 faulty in /dev/md3

stratos@yoda:~/sandbox$ sudo mdadm --detail /dev/md3
/dev/md3:
        Version : 00.90
  Creation Time : Sat Oct  2 00:09:30 2010
     Raid Level : raid5
     Array Size : 204672 (199.91 MiB 209.58 MB)
  Used Dev Size : 102336 (99.95 MiB 104.79 MB)
   Raid Devices : 3
  Total Devices : 3
Preferred Minor : 3
    Persistence : Superblock is persistent

    Update Time : Sat Oct  2 23:48:23 2010
          State : clean, degraded
 Active Devices : 2
Working Devices : 2
 Failed Devices : 1
  Spare Devices : 0

         Layout : left-symmetric
     Chunk Size : 64K

           UUID : 710c3b37:15563004:a1dba4fa:bb34958c (local to host yoda)
         Events : 0.19

    Number   Major   Minor   RaidDevice State
       0       7        1        0      active sync   /dev/loop1
       1       7        2        1      active sync   /dev/loop2
       2       0        0        2      removed

       3       7        3        -      faulty spare   /dev/loop3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Notice that the state is clean, degraded meaning that the files are OK but the state of the array is, well, degraded.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s check the status of our files:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;stratos@yoda:~/sandbox$ cd myVolume

stratos@yoda:~/sandbox/myVolume$ ls -al
total 18
drwxr-xr-x 3 root    root     1024 2010-10-02 00:42 .
drwxr-xr-x 4 stratos stratos  4096 2010-10-02 11:39 ..
drwx------ 2 root    root    12288 2010-10-02 00:30 lost+found
-rw-r--r-- 1 root    root       26 2010-10-02 00:42 test.txt

stratos@yoda:~/sandbox/myVolume$ cat test.txt
Hello LVM2 logical volume
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Yep, still here. Now, let&amp;rsquo;s remove the failed disk (as if you are opening the computer case and removing the failed disk):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;stratos@yoda:~/sandbox/myVolume$ sudo mdadm --remove /dev/md3 /dev/loop3
mdadm: hot removed /dev/loop3

stratos@yoda:~/sandbox/myVolume$ sudo losetup -d /dev/loop3

stratos@yoda:~/sandbox/myVolume$ sudo rm raid3

stratos@yoda:~/sandbox/myVolume$ sudo mdadm --detail /dev/md3
/dev/md3:
        Version : 00.90
  Creation Time : Sat Oct  2 00:09:30 2010
     Raid Level : raid5
     Array Size : 204672 (199.91 MiB 209.58 MB)
  Used Dev Size : 102336 (99.95 MiB 104.79 MB)
   Raid Devices : 3
  Total Devices : 2
Preferred Minor : 3
    Persistence : Superblock is persistent

    Update Time : Sat Oct  2 23:53:58 2010
          State : clean, degraded
 Active Devices : 2
Working Devices : 2
 Failed Devices : 0
  Spare Devices : 0

         Layout : left-symmetric
     Chunk Size : 64K

           UUID : 710c3b37:15563004:a1dba4fa:bb34958c (local to host yoda)
         Events : 0.22

    Number   Major   Minor   RaidDevice State
       0       7        1        0      active sync   /dev/loop1
       1       7        2        1      active sync   /dev/loop2
       2       0        0        2      removed
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ok, the disk is removed. Now let&amp;rsquo;s assume that you replace the failed hard drive, that you have recreated a similar partition as the one originally used and you are ready to fix the degraded RAID array:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;stratos@yoda:~/sandbox/myVolume$ cd ..

stratos@yoda:~/sandbox$ dd if=/dev/zero of=raid3 bs=10240 count=10240
10240+0 records in
10240+0 records out
104857600 bytes (105 MB) copied, 0.430725 s, 243 MB/s

stratos@yoda:~/sandbox$ sudo losetup /dev/loop3 raid3

stratos@yoda:~/sandbox$ sudo mdadm --add /dev/md3 /dev/loop3
mdadm: added /dev/loop3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now, immediately after adding the disk the array will start reconstructing itself. It should look something like:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;stratos@yoda:~/sandbox$ sudo mdadm --detail /dev/md3
/dev/md3:
        Version : 00.90
  Creation Time : Sat Oct  2 00:09:30 2010
     Raid Level : raid5
     Array Size : 204672 (199.91 MiB 209.58 MB)
  Used Dev Size : 102336 (99.95 MiB 104.79 MB)
   Raid Devices : 3
  Total Devices : 3
Preferred Minor : 3
    Persistence : Superblock is persistent

    Update Time : Sat Oct  2 23:58:58 2010
          State : clean, degraded, recovering
 Active Devices : 2
Working Devices : 3
 Failed Devices : 0
  Spare Devices : 1

         Layout : left-symmetric
     Chunk Size : 64K

 Rebuild Status : 32% complete

           UUID : 710c3b37:15563004:a1dba4fa:bb34958c (local to host yoda)
         Events : 0.34

    Number   Major   Minor   RaidDevice State
       0       7        1        0      active sync   /dev/loop1
       1       7        2        1      active sync   /dev/loop2
       3       7        3        2      spare rebuilding   /dev/loop3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Notice how the state is clean, degraded, recovering and that the Rebuild Status process is at 32% percent. Depending on the size of your array the process might take from some minutes (I doubt it) up to some hours or days. You can always check the process with the above command. The array should be still usable and accesible even while it is getting reconstructed, but I really wouldn&amp;rsquo;t like to push my luck, so I wouldn&amp;rsquo;t suggest doing any work in the array until the reconstruction is done.&lt;/p&gt;

&lt;p&gt;In our case the reconstruction, for a tiny 120MB array, takes merely seconds and if we check the state again we see:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;stratos@yoda:~/sandbox$ sudo mdadm --detail /dev/md3
/dev/md3:
        Version : 00.90
  Creation Time : Sat Oct  2 00:09:30 2010
     Raid Level : raid5
     Array Size : 204672 (199.91 MiB 209.58 MB)
  Used Dev Size : 102336 (99.95 MiB 104.79 MB)
   Raid Devices : 3
  Total Devices : 3
Preferred Minor : 3
    Persistence : Superblock is persistent

    Update Time : Sat Oct  2 23:59:02 2010
          State : clean
 Active Devices : 3
Working Devices : 3
 Failed Devices : 0
  Spare Devices : 0

         Layout : left-symmetric
     Chunk Size : 64K

           UUID : 710c3b37:15563004:a1dba4fa:bb34958c (local to host yoda)
         Events : 0.48

    Number   Major   Minor   RaidDevice State
       0       7        1        0      active sync   /dev/loop1
       1       7        2        1      active sync   /dev/loop2
       2       7        3        2      active sync   /dev/loop3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Nice and clean. Let&amp;rsquo;s hope you never have to go through a procedure like this, EVER.&lt;/p&gt;

&lt;h3 id=&#34;increase-the-raid-array-size&#34;&gt;Increase the RAID array size&lt;/h3&gt;

&lt;p&gt;&amp;rdquo;&amp;ldquo;&amp;rdquo;&amp;ldquo;&amp;rdquo;&amp;ldquo;&amp;rdquo;&amp;ldquo;&amp;rdquo;&amp;ldquo;&amp;rdquo;&amp;ldquo;&amp;rdquo;&amp;rdquo;&lt;/p&gt;

&lt;p&gt;Up until now we were playing with LVM2 volumes and the allocated space that was assigned to the LVM2 Physical Volume. But, what should we do if we want to create a Logical Volume larger than the 49 PE that the Volume Group contains? Well, not much unless we increase the number of PE.&lt;/p&gt;

&lt;p&gt;This can be done in two ways:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Increase the number of disks in the RAID5 array or&lt;/li&gt;
&lt;li&gt;Increase the size of the disks already in the array.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;add-new-disks-to-the-raid-array&#34;&gt;Add new disks to the RAID array&lt;/h3&gt;

&lt;p&gt;Adding a new disk in the array is easy (assuming you still have free SATA ports in your motherboard).&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s run an example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;stratos@yoda:~/sandbox$ dd if=/dev/zero of=raid4 bs=10240 count=10240
15360+0 records in
15360+0 records out
157286400 bytes (157 MB) copied, 0.675796 s, 233 MB/s

stratos@yoda:~/sandbox$ sudo losetup /dev/loop4 loop4

stratos@yoda:~/sandbox$ sudo mdadm --add /dev/md3 /dev/loop4
mdadm: added /dev/loop4

stratos@yoda:~/sandbox$ sudo mdadm --detail /dev/md3
/dev/md3:
        Version : 00.90
  Creation Time : Sat Oct  2 00:09:30 2010
     Raid Level : raid5
     Array Size : 204672 (199.91 MiB 209.58 MB)
  Used Dev Size : 102336 (99.95 MiB 104.79 MB)
   Raid Devices : 3
  Total Devices : 4
Preferred Minor : 3
    Persistence : Superblock is persistent

    Update Time : Sun Oct  3 00:37:16 2010
          State : clean
 Active Devices : 3
Working Devices : 4
 Failed Devices : 0
  Spare Devices : 1

         Layout : left-symmetric
     Chunk Size : 64K

           UUID : 710c3b37:15563004:a1dba4fa:bb34958c (local to host yoda)
         Events : 0.49

    Number   Major   Minor   RaidDevice State
       0       7        1        0      active sync   /dev/loop1
       1       7        2        1      active sync   /dev/loop2
       2       7        3        2      active sync   /dev/loop3

       3       7        4        -      spare   /dev/loop4
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So we added the newly created disk to the array and mdadm considers the new disk a &lt;strong&gt;&amp;ldquo;spare&amp;rdquo;&lt;/strong&gt; disk. A spare disk is considered a disk that is in standby mode ready to substitute a failed disk (automatically, I think; needs investigation). The spare disks capacity does not participate in the total capacity of the array, as it is in standby mode. Let&amp;rsquo;s make it a part of the array:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;stratos@yoda:~/sandbox$ sudo mdadm --grow /dev/md3 --raid-devices=4
mdadm: Need to backup 384K of critical section..
mdadm: ... critical section passed.

stratos@yoda:~/sandbox$ sudo mdadm --detail /dev/md3
/dev/md3:
        Version : 00.91
  Creation Time : Sat Oct  2 00:09:30 2010
     Raid Level : raid5
     Array Size : 204672 (199.91 MiB 209.58 MB)
  Used Dev Size : 102336 (99.95 MiB 104.79 MB)
   Raid Devices : 4
  Total Devices : 4
Preferred Minor : 3
    Persistence : Superblock is persistent

    Update Time : Sun Oct  3 00:38:09 2010
          State : clean, recovering
 Active Devices : 4
Working Devices : 4
 Failed Devices : 0
  Spare Devices : 0

         Layout : left-symmetric
     Chunk Size : 64K

 Reshape Status : 19% complete
  Delta Devices : 1, (3-&amp;gt;4)

           UUID : 710c3b37:15563004:a1dba4fa:bb34958c (local to host yoda)
         Events : 0.68

    Number   Major   Minor   RaidDevice State
       0       7        1        0      active sync   /dev/loop1
       1       7        2        1      active sync   /dev/loop2
       2       7        3        2      active sync   /dev/loop3
       3       7        4        3      active sync   /dev/loop4
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Immediately after the new disk is added to the array, mdadm starts reconstructing the array. Here we see a 19% complete status and the upgrade notification of 3-&amp;gt;4 disks. Again, depending on your disks sizes this might take some time, and probably longer than adding a failed disk to the original disk array size because all the data will have to be re-written and spread across the new disk.&lt;/p&gt;

&lt;p&gt;The array should still be functional and up and running during the whole procedure. Once it&amp;rsquo;s done we have to allocate the extra space to the LVM2 Physical Volume and resize the lvm-group LVM2 Volume Group.&lt;/p&gt;

&lt;p&gt;First let&amp;rsquo;s see how much space the Physical Volume has:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;stratos@yoda:~/sandbox$ sudo pvdisplay /dev/md3
  --- Physical volume ---
  PV Name               /dev/md3
  VG Name               lvm-group
  PV Size               199.88 MB / not usable 3.88 MB
  Allocatable           yes
  PE Size (KByte)       4096
  Total PE              49
  Free PE               19
  Allocated PE          30
  PV UUID               a00wd1-tPYt-zeuf-dybg-WbOX-3KDb-JYWlU6
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So, although we have added a fourth disk in the RAID array the LVM2 Physical Volume is still at 200MB.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s increase it:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;stratos@yoda:~/sandbox$ sudo pvresize /dev/md3
  Physical volume &amp;quot;/dev/md3&amp;quot; changed
  1 physical volume(s) resized / 0 physical volume(s) not resized

stratos@yoda:~/sandbox$ sudo pvdisplay /dev/md3
  --- Physical volume ---
  PV Name               /dev/md3
  VG Name               lvm-group
  PV Size               299.62 MB / not usable 3.62 MB
  Allocatable           yes
  PE Size (KByte)       4096
  Total PE              74
  Free PE               44
  Allocated PE          30
  PV UUID               a00wd1-tPYt-zeuf-dybg-WbOX-3KDb-JYWlU6

stratos@yoda:~/sandbox$ sudo vgdisplay lvm-group
  --- Volume group ---
  VG Name               lvm-group
  System ID
  Format                lvm2
  Metadata Areas        1
  Metadata Sequence No  6
  VG Access             read/write
  VG Status             resizable
  MAX LV                0
  Cur LV                1
  Open LV               1
  Max PV                0
  Cur PV                1
  Act PV                1
  VG Size               296.00 MB
  PE Size               4.00 MB
  Total PE              74
  Alloc PE / Size       30 / 120.00 MB
  Free  PE / Size       44 / 176.00 MB
  VG UUID               D6c2DE-YS5R-MM8M-rle5-J117-uF11-KORUYB
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As you see the Physical Volume now is 300MB. A nice side-effect is that the lvm-group Volume Group was also automatically resized, because when we initially created we used all the available space of the Physical Volume, so it kept using all the available PE. So now we have a total of 74 PE to play with. If you want to increase the size of your Logical Volumes you can now easily do it (see the &amp;lsquo;Resize Volumes&amp;rsquo; above).&lt;/p&gt;

&lt;p&gt;But do we still have our data?:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;stratos@yoda:~/sandbox$ cd myVolume

stratos@yoda:~/sandbox/myVolume$ cat test.txt
Hello LVM2 logical volume
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Yep, still here.&lt;/p&gt;

&lt;h3 id=&#34;increase-the-size-of-the-raid-disks&#34;&gt;Increase the size of the RAID disks&lt;/h3&gt;

&lt;p&gt;In reality (as in my personal case) you will end up increasing the initial RAID size because you want to substitute the original disks with larger ones. The prices keep dropping and the amount of SATA ports in a motherboard are finite. So, sooner or later you will need to replace the disks, with larger ones.&lt;/p&gt;

&lt;p&gt;Unfortunately, you cannot do the upgrade at your leisure. That is, you just can&amp;rsquo;t drop a 1TB disk together with a couple of 640GB disks and expect to create a RAID5 array larger than the original (3-1) x 640GB = 1280GB RAID5 array. You will have to upgrade all the disks at the same time, if you want to expand your RAID5 array. You can always, upgrade just one disk, though, and use the extra space of the larger disk as another partition.&lt;/p&gt;

&lt;p&gt;So, for now, we have a 4 disk array with 100MB capacity each. Let&amp;rsquo;s substitute each disk with a 150MB one (one at a time):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;stratos@yoda:~/sandbox$ sudo mdadm --fail /dev/md3 /dev/loop1
mdadm: set /dev/loop1 faulty in /dev/md3

stratos@yoda:~/sandbox$ sudo mdadm --remove /dev/md3 /dev/loop1
mdadm: hot removed /dev/loop1

stratos@yoda:~/sandbox$ sudo losetup -d /dev/loop1

stratos@yoda:~/sandbox$ rm raid1

stratos@yoda:~/sandbox$ dd if=/dev/zero of=raid1 bs=10240 count=15360
15360+0 records in
15360+0 records out
157286400 bytes (157 MB) copied, 0.498492 s, 316 MB/s

stratos@yoda:~/sandbox$ sudo losetup /dev/loop1 raid1

stratos@yoda:~/sandbox$ sudo mdadm /dev/md3 --add /dev/loop1
mdadm: added /dev/loop1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;What we did was to fail, remove and substitute one disk with another, bigger one. As always the procedure is not instantaneous and the &amp;ldquo;adding&amp;rdquo; of the larger disk into the array should take some time.&lt;/p&gt;

&lt;p&gt;When the array has finished restructuring, from the last add we did, lather-rinse-repeat for the remaining disks (loop2, loop3 and loop4 in our case). When you are done with all disks:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;stratos@yoda:~/sandbox$ sudo mdadm --detail /dev/md3
/dev/md3:
        Version : 00.90
  Creation Time : Sun Oct  3 15:16:01 2010
     Raid Level : raid5
     Array Size : 307008 (299.86 MiB 314.38 MB)
  Used Dev Size : 102336 (99.95 MiB 104.79 MB)
   Raid Devices : 4
  Total Devices : 4
Preferred Minor : 3
    Persistence : Superblock is persistent

    Update Time : Sun Oct  3 15:18:28 2010
          State : clean
 Active Devices : 4
Working Devices : 4
 Failed Devices : 0
  Spare Devices : 0

         Layout : left-symmetric
     Chunk Size : 64K

           UUID : ec2bf06b:20f11352:a1dba4fa:bb34958c (local to host yoda)
         Events : 0.28

    Number   Major   Minor   RaidDevice State
       0       7        1        0      active sync   /dev/loop1
       1       7        2        1      active sync   /dev/loop2
       2       7        3        2      active sync   /dev/loop3
       3       7        4        3      active sync   /dev/loop4
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The array is still 300MB (4 - 1) * 100MB = 300 MB! What happens is that during the introduction of the larger disks into the already existing array, mdadm is using a partition as large as the existing partitions that already are part of the array. So basically although we are adding a 150MB disk, the array is using only 100MB, just as the already existing older 100MB disks.&lt;/p&gt;

&lt;p&gt;When we substitute all four disks, we can resize the array and use the remaining 50MB from each disk. Let&amp;rsquo;s do it:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;stratos@yoda:~/sandbox$ sudo mdadm /dev/md3 --grow --size=max

stratos@yoda:~/sandbox$ sudo mdadm --detail /dev/md3
/dev/md3:
        Version : 00.90
  Creation Time : Sun Oct  3 15:16:01 2010
     Raid Level : raid5
     Array Size : 460608 (449.89 MiB 471.66 MB)
  Used Dev Size : 153536 (149.96 MiB 157.22 MB)
   Raid Devices : 4
  Total Devices : 4
Preferred Minor : 3
    Persistence : Superblock is persistent

    Update Time : Sun Oct  3 15:59:13 2010
          State : clean
 Active Devices : 4
Working Devices : 4
 Failed Devices : 0
  Spare Devices : 0

         Layout : left-symmetric
     Chunk Size : 64K

           UUID : ec2bf06b:20f11352:a1dba4fa:bb34958c (local to host yoda)
         Events : 0.137

    Number   Major   Minor   RaidDevice State
       0       7        1        0      active sync   /dev/loop1
       1       7        2        1      active sync   /dev/loop2
       2       7        3        2      active sync   /dev/loop3
       3       7        4        3      active sync   /dev/loop4
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Finally done. The array is now 450MB (4-1) * 150MB = 450 MB. But how about the Volume Groups we had? Let&amp;rsquo;s check them:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;stratos@yoda:~/sandbox$ sudo vgdisplay lvm-group
  --- Volume group ---
  VG Name               lvm-group
  System ID
  Format                lvm2
  Metadata Areas        1
  Metadata Sequence No  2
  VG Access             read/write
  VG Status             resizable
  MAX LV                0
  Cur LV                1
  Open LV               0
  Max PV                0
  Cur PV                1
  Act PV                1
  VG Size               296.00 MB
  PE Size               4.00 MB
  Total PE              74
  Alloc PE / Size       30 / 120.00 MB
  Free  PE / Size       44 / 176.00 MB
  VG UUID               0F0ahV-9wdw-piAN-RQGt-sA4E-ttR3-c0ClSd

stratos@yoda:~/sandbox$ sudo pvresize /dev/md3
  Physical volume &amp;quot;/dev/md3&amp;quot; changed
  1 physical volume(s) resized / 0 physical volume(s) not resized

stratos@yoda:~/sandbox$ sudo vgdisplay lvm-group
  --- Volume group ---
  VG Name               lvm-group
  System ID
  Format                lvm2
  Metadata Areas        1
  Metadata Sequence No  3
  VG Access             read/write
  VG Status             resizable
  MAX LV                0
  Cur LV                1
  Open LV               0
  Max PV                0
  Cur PV                1
  Act PV                1
  VG Size               448.00 MB
  PE Size               4.00 MB
  Total PE              112
  Alloc PE / Size       30 / 120.00 MB
  Free  PE / Size       82 / 328.00 MB
  VG UUID               0F0ahV-9wdw-piAN-RQGt-sA4E-ttR3-c0ClSd
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As you see we went from 74 PE to 112 PE. Now we can go back to normal LVM2 volume manipulation to take advantage of the gained space.&lt;/p&gt;

&lt;h3 id=&#34;recover-raid-array&#34;&gt;Recover RAID array&lt;/h3&gt;

&lt;p&gt;OK, but what happens when something happens and you lose your RAID array?&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s just say that you whole motherboard just fails and you have to take your disks and set the machine again. Or, when you re-install the OS and you want to remount your RAID array.&lt;/p&gt;

&lt;p&gt;The actual neccessary file, to identify and mount the RAID array lives in /etc/mdadm/mdadm.conf and it looks like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;stratos@yoda:~/sandbox$ cat /etc/mdadm/mdadm.conf
# mdadm.conf
#
# Please refer to mdadm.conf(5) for information about this file.
#

# by default, scan all partitions (/proc/partitions) for MD superblocks.
# alternatively, specify devices to scan, using wildcards if desired.
DEVICE partitions

# auto-create devices with Debian standard permissions
CREATE owner=root group=disk mode=0660 auto=yes

# automatically tag new arrays as belonging to the local system
HOMEHOST &amp;lt;system&amp;gt;

# instruct the monitoring daemon where to send mail alerts
MAILADDR root

# definitions of existing MD arrays
ARRAY /dev/md0 level=raid0 num-devices=3 UUID=1ecc61f7:ab95b8b0:b6150be0:b4ec82ed
ARRAY /dev/md1 level=raid5 num-devices=3 UUID=0e065f5e:b0bc71b3:b6150be0:b4ec82ed

# This file was auto-generated on Wed, 22 Sep 2010 13:21:48 +0300
# by mkconf $Id$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note the ARRAY definitions that tell mdadm what arrays you are currently using.&lt;/p&gt;

&lt;p&gt;On a newly created system this file will be probably missing and you will have to recreate it.&lt;/p&gt;

&lt;p&gt;If you already have an /etc/mdadm/mdadm.conf file in your system, but you are missing the ARRAY definitions you can force mdadm to create these definitions for you:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;stratos@yoda:~/sandbox$ sudo mdadm --examine --scan

ARRAY /dev/md0 level=raid0 num-devices=3 UUID=1ecc61f7:ab95b8b0:b6150be0:b4ec82ed
ARRAY /dev/md1 level=raid5 num-devices=3 UUID=0e065f5e:b0bc71b3:b6150be0:b4ec82ed
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;All you have to do is append these lines at the end of the /etc/mdadm/mdadm.conf file.&lt;/p&gt;

&lt;p&gt;If you don&amp;rsquo;t have an mdadm.conf file at all you can quickly produce one:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;stratos@yoda:~/sandbox$ echo &#39;DEVICE partitions&#39; &amp;gt; mdadm.conf
stratos@yoda:~/sandbox$ sudo mdadm --examine --scan &amp;gt;&amp;gt; mdadm.conf
stratos@yoda:~/sandbox$ sudo cp mdadm.conf /etc/mdadm/mdadm.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now, if you reboot you should have you array back. Well, done!&lt;/p&gt;

&lt;h2 id=&#34;raid-lvm2-summary&#34;&gt;RAID/LVM2 Summary&lt;/h2&gt;

&lt;p&gt;So to sum up all the Raid and LVM2 operations that we did:&lt;/p&gt;

&lt;h3 id=&#34;create-sandbox&#34;&gt;Create sandbox&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;cd ~
cd sandbox/
dd if=/dev/zero of=raid1 bs=10240 count=10240
cp raid1 raid2
cp raid1 raid3
sudo losetup /dev/loop1 raid1
sudo losetup /dev/loop2 raid2
sudo losetup /dev/loop3 raid3
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;create-raid5-array&#34;&gt;Create RAID5 array&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;sudo mdadm --create --verbose /dev/md3 -l5 -n3 /dev/loop1 /dev/loop2 /dev/loop3
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;create-lvm2-volumes&#34;&gt;Create LVM2 volumes&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;sudo pvcreate /dev/md3
sudo vgcreate lvm-group /dev/md3
sudo lvcreate -l 20 lvm-group -n myVolume     # you can use any PE you want
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;format-mount-the-volume&#34;&gt;Format / Mount the volume&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;sudo mkfs.ext4 /dev/lvm-group/myVolume
mkdir myVolume
sudo mount /dev/lvm-group/myVolume myVolume
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;extend-an-lvm2-logical-volume&#34;&gt;Extend an LVM2 Logical Volume&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;sudo lvextend -l+10 /dev/lvm-group/myVolume   # add any PE you want
sudo umount myVolume
sudo e2fsck -f /dev/lvm-group/myVolume
sudo resize2fs /dev/lvm-group/myVolume
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;remove-an-lvm2-logical-volume&#34;&gt;Remove an LVM2 Logical Volume&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;sudo lvremove /dev/lvm-group/myVolume2
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;replace-a-failed-raid-disk&#34;&gt;Replace a failed RAID disk&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;sudo mdadm --fail /dev/md3 /dev/loop3          # This is part of our simulation
sudo mdadm --remove /dev/md3 /dev/loop3
sudo losetup -d /dev/loop3
rm raid3
dd if=/dev/zero of=raid3 bs=10240 count=10240  # This creates a new fake disk
sudo losetup /dev/loop3 raid3
sudo mdadm /dev/md3 --add /dev/loop3           # Do this under normal circumstances
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;add-new-disks-to-raid5-array&#34;&gt;Add new disks to RAID5 array&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;dd if=/dev/zero of=raid4 bs=10240 count=10240  # This is part of our simulation
sudo losetup /dev/loop4 raid4
sudo mdadm --grow /dev/md3 --raid-devices=4    # Do this under normal circumstances
sudo pvresize /dev/md3
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;increase-size-of-raid-disks&#34;&gt;Increase size of RAID disks&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;sudo mdadm --fail /dev/md3 /dev/loop1          # First remove old disk
sudo mdadm --remove /dev/md3 /dev/loop1
sudo losetup -d /dev/loop1                     # This is part of our simulation
rm raid1
dd if=/dev/zero of=raid1 bs=10240 count=15360  # This creates a new fake disk
sudo losetup /dev/loop1 raid1
sudo mdadm /dev/md3 --add /dev/loop1           # Do this under normal circumstances
... Repeat for all disks...                    # Replace all disks
sudo mdadm /dev/md3 --grow --size=max
sudo pvresize /dev/md3
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;recover-lost-raid-array&#34;&gt;Recover lost RAID array&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;sudo mdadm --examine --scan                   # append output to /etc/mdadm/mdadm.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And that&amp;rsquo;s how it&amp;rsquo;s done.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ubuntu Snippets</title>
      <link>http://stratos.gerakakis.net/2010/09/ubuntu_snippets/</link>
      <pubDate>Thu, 09 Sep 2010 00:00:00 +0000</pubDate>
      
      <guid>http://stratos.gerakakis.net/2010/09/ubuntu_snippets/</guid>
      <description>

&lt;p&gt;These are little Ubuntu snippets, that I always forget!&lt;/p&gt;

&lt;h3 id=&#34;changing-the-timezone&#34;&gt;Changing the timezone&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;sudo dpkg-reconfigure tzdata
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;create-and-mount-xfs-filesystem&#34;&gt;Create and mount xfs filesystem&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get install xfsprogs
$ sudo mkfs.xfs /dev/sdf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Add to fstab:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;/dev/sdf   /my/location   xfs  defaults,nobootwait,noatime    0    0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;(Tested on Amazon EC2 EBS volume.)&lt;/p&gt;

&lt;h3 id=&#34;timestamp-too-far-in-the-future&#34;&gt;Timestamp too far in the future&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;    su rm -rf /var/run/sudo/Username
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;(Username: the name of the Ubuntu user, that should behave like root)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Change codepage on Windows console</title>
      <link>http://stratos.gerakakis.net/2010/03/change_codepage_on_windows_console/</link>
      <pubDate>Tue, 02 Mar 2010 00:00:00 +0000</pubDate>
      
      <guid>http://stratos.gerakakis.net/2010/03/change_codepage_on_windows_console/</guid>
      <description>&lt;p&gt;You will find this essential when administrating ORACLE databases from the command line and the locale of the database is set to Greek. I prefer to read the console output in Greek rather in gibberish::&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;chcp 1253
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Passwordless ssh connection with another server</title>
      <link>http://stratos.gerakakis.net/2008/03/passwordless_ssh_connection_with_another_server/</link>
      <pubDate>Fri, 21 Mar 2008 00:00:00 +0000</pubDate>
      
      <guid>http://stratos.gerakakis.net/2008/03/passwordless_ssh_connection_with_another_server/</guid>
      <description>&lt;p&gt;First, create the key on the local machine (without a passphrase) ::&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;user@machine:~&amp;gt; ssh-keygen -t rsa
Generating public/private rsa key pair.
Enter file in which to save the key (/home/user/.ssh/id_rsa):
Created directory &#39;/home/user/.ssh&#39;.
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in /home/user/.ssh/id_rsa.
Your public key has been saved in /home/user/.ssh/id_rsa.pub.
The key fingerprint is:
XX:XX:XX:XX:...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then create a directory on the remote machine::&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;user@machine:~&amp;gt; ssh otherUser@remote &amp;quot;mkdir -p .ssh &amp;amp;&amp;amp; chmod 700 .ssh&amp;quot;
otherUser@remote&#39;s password:
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Finally append new key to remote .ssh/authorized_keys file::&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;user@machine:~&amp;gt; cat .ssh/id_rsa.pub | ssh otherUser@remote &#39;tee -a .ssh/authorized_keys&#39;
otherUser@remote&#39;s password:
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: In place of the last command you could have also used::&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;user@machine:~&amp;gt; cat .ssh/id_rsa.pub | ssh otherUser@remote &#39;cat &amp;gt;&amp;gt; .ssh/authorized_keys&#39;
otherUser@remote&#39;s password:
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;but in the case your public key file does not contain a newline character at the end of the file (which probably it does not) the final concatenation on the &lt;code&gt;authorized_keys&lt;/code&gt; will end up with long text line without newlines between the keys, thus making the file invalid. Tee on the other hand prepends the concatenation with a newline, keeping &lt;code&gt;authorized keys&lt;/code&gt; happy.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Migrating greek table from mysql &lt; 4.1</title>
      <link>http://stratos.gerakakis.net/2006/06/migrate_mysql_4.1/</link>
      <pubDate>Sat, 17 Jun 2006 00:00:00 +0000</pubDate>
      
      <guid>http://stratos.gerakakis.net/2006/06/migrate_mysql_4.1/</guid>
      <description>&lt;p&gt;I do not remember how the tables were transferred from the old DB to the new (more likely through a mysqldump).&lt;/p&gt;

&lt;p&gt;The end effect was that the tables in the 4.1 MySql Db had a collation of latin1_swedish_ci.&lt;/p&gt;

&lt;p&gt;After backing up the affected tables, do::&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ALTER TABLE pfl_links_prot
MODIFY category blob,
MODIFY comments blob;

ALTER TABLE pfl_links_prot
MODIFY category varchar(20) character set greek,
MODIFY comments text character set greek;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Just make sure you return the column type at exactly what was before you made it a blob.&lt;/p&gt;

&lt;p&gt;Now the columns should have a collation of greek_general_ci&lt;/p&gt;

&lt;p&gt;Furthermore, in case the php scripts gives you trouble loading the new rows, try something like:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$MySql_Library-&amp;gt;Execute(&amp;quot;SET character_set_client=greek&amp;quot;);
$MySql_Library-&amp;gt;Execute(&amp;quot;SET character_set_connection=greek&amp;quot;);
$MySql_Library-&amp;gt;Execute(&amp;quot;SET character_set_results=greek&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The above example was run in some AdoDB Phakt scripts, but the gist of it is before any selects run the above sql commands.&lt;/p&gt;

&lt;p&gt;Good luck&amp;hellip;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>